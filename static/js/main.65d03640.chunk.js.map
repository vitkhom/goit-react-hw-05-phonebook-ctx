{"version":3,"sources":["components/ContactForm/index.js","components/ContactForm/ContactForm.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/index.js","components/Filter/Filter.jsx","common/Section/index.js","common/Section/Section.jsx","context/ThemeContext.js","hoc/withTheme.js","common/Wrapper/index.js","common/Wrapper/Wrapper.jsx","utils/localStorageSave.js","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","hendleSubmit","e","preventDefault","props","onAdd","setState","hendleInputChange","target","value","this","onSubmit","type","onChange","className","Component","ContactList","contacts","onRemove","map","id","key","onClick","Filter","filter","handleFilterChange","onFilterChange","Section","title","children","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","withTheme","WrappedComponent","Consumer","context","theme","Wrapper","toggleTheme","style","background","config","color","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","fill","d","checked","currentTarget","htmlFor","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","bind","handleAddContact","some","contact","toast","warn","uuidv4","filterContacts","includes","handleRemoveContact","saveData","localStorageFunc","loadData","Provider","length","position","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65d03640.chunk.js","sourcesContent":["import ContactForm from './ContactForm';\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAdd: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAdd(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  hendleInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.hendleSubmit}>\r\n        <h3>Name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.hendleInputChange}\r\n        />\r\n        <h3>Number</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.hendleInputChange}\r\n        />\r\n        <button className=\"addButton\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import ContactList from './ContactList';\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <span className=\"name\">{name}:</span>\r\n          <span className=\"number\">{number}</span>\r\n          <button className=\"removeButton\" onClick={() => onRemove(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import Filter from './Filter';\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    onFilterChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  handleFilterChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        filter: e.target.value,\r\n      },\r\n      () => this.props.onFilterChange(this.state),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className=\"filter\">\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={this.handleFilterChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import Section from './Section';\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.array,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nexport const themeConfig = {\r\n  light: {\r\n    fontColor: '#333333',\r\n    bodyBg: '#fff',\r\n  },\r\n\r\n  dark: {\r\n    fontColor: '#fff',\r\n    bodyBg: '#333333',\r\n  },\r\n};\r\n\r\nconst ThemeContext = React.createContext(themeConfig.light);\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function withTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {context => <WrappedComponent {...props} theme={context} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import Wrapper from './Wrapper';\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withTheme from '../../hoc/withTheme';\r\n\r\nimport './Wrapper.scss';\r\n\r\nconst Wrapper = ({ title, toggleTheme, theme, children }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          background: theme.config.bodyBg,\r\n          color: theme.config.fontColor,\r\n        }}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <h1 className=\"header__title\">{title}</h1>\r\n            <div className=\"theme-switch\">\r\n              <svg\r\n                aria-hidden=\"true\"\r\n                data-prefix=\"fas\"\r\n                data-icon=\"sun\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 512 512\"\r\n                className=\"theme-switch__icon\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\r\n                ></path>\r\n              </svg>\r\n\r\n              <div className=\"switch\">\r\n                <input\r\n                  className=\"switch__input js-switch-input\"\r\n                  type=\"checkbox\"\r\n                  checked={theme.type === 'dark'}\r\n                  onChange={e => toggleTheme(e.currentTarget.value)}\r\n                  name=\"theme\"\r\n                  id=\"theme-switch-control\"\r\n                />\r\n                <label\r\n                  aria-hidden=\"true\"\r\n                  className=\"switch__label\"\r\n                  htmlFor=\"theme-switch-control\"\r\n                >\r\n                  On\r\n                </label>\r\n                <div aria-hidden=\"true\" className=\"switch__marker\"></div>\r\n              </div>\r\n\r\n              <svg\r\n                aria-hidden=\"true\"\r\n                data-prefix=\"fas\"\r\n                data-icon=\"moon\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 512 512\"\r\n                className=\"theme-switch__icon\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nWrapper.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  toggleTheme: PropTypes.func.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  children: PropTypes.array,\r\n};\r\n\r\nexport default withTheme(Wrapper);\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport default {\r\n  save,\r\n  get,\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\nimport Section from '../common/Section';\r\nimport Wrapper from '../common/Wrapper';\r\n\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { themeConfig } from '../context/ThemeContext';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport localStorageFunc from '../utils/localStorageSave';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    theme: 'light',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.saveData();\r\n  }\r\n\r\n  toggleTheme = this.toggleTheme.bind(this);\r\n\r\n  toggleTheme() {\r\n    this.setState({\r\n      theme: this.state.theme === 'dark' ? 'light' : 'dark',\r\n    });\r\n  }\r\n\r\n  handleAddContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast.warn(`${name} is already in contacts`);\r\n\r\n      return;\r\n    }\r\n\r\n    if (!name || !number) {\r\n      toast.warn(`Please enter the contact name and number`);\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [\r\n        ...contacts,\r\n        {\r\n          id: uuidv4(),\r\n          name,\r\n          number,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = ({ filter }) => {\r\n    this.setState({\r\n      filter,\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const filteredContacts = filter\r\n      ? contacts.filter(contact => contact.name.includes(filter))\r\n      : contacts;\r\n\r\n    return filteredContacts;\r\n  };\r\n\r\n  handleRemoveContact = id => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  saveData = () => {\r\n    localStorageFunc.save('phonebook', this.state.contacts);\r\n    localStorageFunc.save('theme', this.state.theme);\r\n  };\r\n\r\n  loadData = () => {\r\n    const contacts = localStorageFunc.get('phonebook');\r\n    const theme = localStorageFunc.get('theme');\r\n\r\n    if (contacts) {\r\n      this.setState({ contacts });\r\n    }\r\n\r\n    if (theme) {\r\n      this.setState({ theme });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n\r\n    return (\r\n      <ThemeContext.Provider\r\n        value={{\r\n          type: this.state.theme,\r\n          config: themeConfig[this.state.theme],\r\n        }}\r\n      >\r\n        <Wrapper title=\"Phonebook\" toggleTheme={this.toggleTheme}>\r\n          <ContactForm onAdd={this.handleAddContact} />\r\n\r\n          <Section title=\"Contacts\">\r\n            {contacts.length >= 2 && (\r\n              <Filter onFilterChange={this.handleFilterChange} />\r\n            )}\r\n            <ContactList\r\n              contacts={this.filterContacts()}\r\n              onRemove={this.handleRemoveContact}\r\n            />\r\n          </Section>\r\n          <ToastContainer position=\"top-center\" />\r\n        </Wrapper>\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}